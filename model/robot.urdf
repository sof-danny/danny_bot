<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from robot.xacro                    | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!-- ###################################### -->
<!-- URDF DESCRIPTION OF THE DIFFERENTIAL DRIVE ROBOT    	-->
<!-- Made by Aleksandar Haber		    				-->
<!-- June 2024           		 					    -->
<!-- Modified by Samuel Folorunsho Mar 2025 -->
<!-- ###################################### 			-->
<robot name="differential_drive_robot">
  <!-- COLOR -->
  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>
  <material name="orange">
    <color rgba="1 0.3 0.1 1"/>
  </material>
  <material name="blue">
    <color rgba="0.2 0.2 1 1"/>
  </material>
  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>
  <material name="red">
    <color rgba="1 0 0 1"/>
  </material>
  <material name="green">
    <color rgba="0 1 0 1"/>
  </material>
  <material name="gray">
    <color rgba="0.7 0.7 0.7 1"/>
  </material>
  <!-- Everything is described here -->
  <!-- http://classic.gazebosim.org/tutorials?tut=ros_urdf&cat=connect_ros  -->
  <!-- mu1 and mu2 are friction coefficients -->
  <gazebo reference="base_footprint">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Gray</material>
  </gazebo>
  <gazebo reference="base_link">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Green</material>
  </gazebo>
  <gazebo reference="right_wheel_link">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="left_wheel_link">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="caster_link">
    <mu1>0.000002</mu1>
    <mu2>0.000002</mu2>
    <material>Gazebo/Gray</material>
  </gazebo>
  <!-- GPS sensor in Gazebo moved to modular file gps.xacro -->
  <!-- Controller for the differential drive robot -->
  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="diff_drive">
      <ros>
        <namespace> </namespace>
      </ros>
      <!-- Number of wheel pairs -->
      <num_wheel_pairs>1</num_wheel_pairs>
      <!-- wheels0-->
      <left_joint>left_wheel_joint</left_joint>
      <right_joint>right_wheel_joint</right_joint>
      <!-- kinematics -->
      <wheel_separation>0.39999999999999997</wheel_separation>
      <wheel_diameter>0.16</wheel_diameter>
      <!-- limits -->
      <max_wheel_torque>5000</max_wheel_torque>
      <max_wheel_acceleration>7.0</max_wheel_acceleration>
      <!-- output -->
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>true</publish_wheel_tf>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_footprint</robot_base_frame>
    </plugin>
  </gazebo>
  <!-- ########################################################### -->
  <!-- FROM HERE WE DEFINE LINKS, JOINTS 				 -->
  <!-- ########################################################### -->
  <!-- We need to have this dummy link otherwise Gazebo will complain -->
  <link name="base_footprint">
</link>
  <joint name="base_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
  </joint>
  <!-- ########################################################### -->
  <!-- START: Body link of the robot -->
  <!-- ########################################################### -->
  <link name="base_link">
    <visual>
      <geometry>
        <box size="0.5 0.35 0.13"/>
      </geometry>
      <material name="green"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </visual>
    <collision>
      <geometry>
        <box size="0.5 0.35 0.13"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="61.652499999999996"/>
      <inertia ixx="0.7161965416666666" ixy="0" ixz="0" iyy="1.3712543541666666" iyz="0" izz="1.9137963541666663"/>
    </inertial>
  </link>
  <!-- ########################################################### -->
  <!-- END: Body link of the robot -->
  <!-- ########################################################### -->
  <!-- ########################################################### -->
  <!-- START: Back right wheel of the robot and the joint -->
  <!-- ########################################################### -->
  <joint name="right_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="right_wheel_link"/>
    <origin rpy="0 0 0" xyz="-0.16 -0.19999999999999998 -0.05"/>
    <axis xyz="0 1 0"/>
    <limit effort="1000" velocity="1000"/>
    <dynamics damping="1.0" friction="1.0"/>
  </joint>
  <link name="right_wheel_link">
    <visual>
      <origin rpy="1.570795 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.08"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="1.570795 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.08"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="2.72438914608"/>
      <inertia ixx="0.004926603705827999" ixy="0.0" ixz="0.0" iyy="0.004926603705827999" iyz="0" izz="0.008718045267456"/>
    </inertial>
  </link>
  <!-- ########################################################### -->
  <!-- END: Back right wheel of the robot and the joint -->
  <!-- ########################################################### -->
  <!-- ########################################################### -->
  <!-- START: Back left wheel of the robot and the joint -->
  <!-- ########################################################### -->
  <joint name="left_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="left_wheel_link"/>
    <origin rpy="0 0 0" xyz="-0.16 0.19999999999999998 -0.05"/>
    <axis xyz="0 1 0"/>
    <limit effort="1000" velocity="1000"/>
    <dynamics damping="1.0" friction="1.0"/>
  </joint>
  <link name="left_wheel_link">
    <visual>
      <origin rpy="1.570795 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.08"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="1.570795 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.08"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="2.72438914608"/>
      <inertia ixx="0.004926603705827999" ixy="0.0" ixz="0.0" iyy="0.004926603705827999" iyz="0" izz="0.008718045267456"/>
    </inertial>
  </link>
  <!-- ########################################################### -->
  <!-- END: Back left wheel of the robot and the joint -->
  <!-- ########################################################### -->
  <!-- ########################################################### -->
  <!-- START: Caster wheel										 -->
  <!-- ########################################################### -->
  <joint name="caster_joint" type="fixed">
    <parent link="base_link"/>
    <child link="caster_link"/>
    <origin rpy="0 0 0" xyz="0.16 0 -0.05"/>
  </joint>
  <link name="caster_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.08"/>
      </geometry>
      <material name="gray"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.08"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="5.812030178304"/>
      <inertia ixx="0.014878797256458243" ixy="0.0" ixz="0.0" iyy="0.014878797256458243" iyz="0" izz="0.014878797256458243"/>
    </inertial>
  </link>
  <!-- ########################################################### -->
  <!-- END: Caster wheel											 -->
  <!-- ########################################################### -->
  <!-- ########################################################### -->
  <!-- INCLUDING SENSOR REFERENCES                                          -->
  <!-- ########################################################### -->
  <!-- Moved to modular file sensors/...-->
  <!-- LIDAR connector link -->
  <joint name="lidar_connector_joint" type="fixed">
    <parent link="base_link"/>
    <child link="lidar_connector_link"/>
    <origin rpy="0 0 0" xyz="0 0 0.065"/>
  </joint>
  <link name="lidar_connector_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.06" radius="0.02"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.06" radius="0.02"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.000033" ixy="0" ixz="0" iyy="0.000033" iyz="0" izz="0.000033"/>
    </inertial>
  </link>
  <!-- LIDAR sensor -->
  <joint name="lidar_joint" type="fixed">
    <parent link="lidar_connector_link"/>
    <child link="lidar_link"/>
    <origin rpy="0 0 0" xyz="0 0 0.05"/>
  </joint>
  <link name="lidar_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.04" radius="0.05"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.04" radius="0.05"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.000033" ixy="0" ixz="0" iyy="0.000033" iyz="0" izz="0.000033"/>
    </inertial>
  </link>
  <!-- LIDAR sensor in Gazebo -->
  <gazebo reference="lidar_link">
    <material>Gazebo/Black</material>
    <sensor name="lidar" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159</min_angle>
            <max_angle>3.14159</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.1</min>
          <max>10.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_ray_sensor.so" name="lidar_controller">
        <ros>
          <namespace>/</namespace>
          <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>lidar_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="lidar_connector_link">
    <mu1>0.000002</mu1>
    <mu2>0.000002</mu2>
    <material>Gazebo/Black</material>
  </gazebo>
  <!-- Camera sensor -->
  <joint name="camera_joint" type="fixed">
    <parent link="base_link"/>
    <child link="camera_link"/>
    <origin rpy="0 0.2 0" xyz="0.25 0.05 0.075"/>
    <!-- Positioned forward and slightly tilted down -->
  </joint>
  <link name="camera_link">
    <visual>
      <origin rpy="0 1.570796325 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.03 0.05 0.02"/>
      </geometry>
      <material name="orange"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.03 0.05 0.05"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.000033" ixy="0" ixz="0" iyy="0.000033" iyz="0" izz="0.000033"/>
    </inertial>
  </link>
  <!-- Camera optical frame -->
  <joint name="camera_optical_joint" type="fixed">
    <parent link="camera_link"/>
    <child link="camera_optical_frame"/>
    <origin rpy="-1.570796325 0 -1.570796325" xyz="0 0 0"/>
  </joint>
  <link name="camera_optical_frame"/>
  <!-- Camera sensor in Gazebo -->
  <gazebo reference="camera_link">
    <material>Gazebo/Orange</material>
    <sensor name="camera" type="camera">
      <camera>
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>30</update_rate>
      <visualize>true</visualize>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <ros>
          <namespace>/</namespace>
          <remapping>image_raw:=camera/image_raw</remapping>
          <remapping>camera_info:=camera/camera_info</remapping>
        </ros>
        <output_type>sensor_msgs/Image</output_type>
        <frame_name>camera_optical_frame</frame_name>
        <camera_name>camera</camera_name>
        <update_rate>30.0</update_rate>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Depth Camera mount directly on body -->
  <joint name="depth_camera_joint" type="fixed">
    <parent link="base_link"/>
    <child link="depth_camera_link"/>
    <origin rpy="0 0.2 0" xyz="0.25 -0.05 0.075"/>
    <!-- Positioned forward and slightly tilted down -->
  </joint>
  <link name="depth_camera_link">
    <visual>
      <origin rpy="0 1.570796325 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.03 0.05 0.02"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.03 0.05 0.05"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.000033" ixy="0" ixz="0" iyy="0.000033" iyz="0" izz="0.000033"/>
    </inertial>
  </link>
  <!-- Depth Camera optical frame -->
  <joint name="depth_camera_optical_joint" type="fixed">
    <parent link="depth_camera_link"/>
    <child link="depth_camera_optical_frame"/>
    <origin rpy="-1.570796325 0 -1.570796325" xyz="0 0 0"/>
  </joint>
  <link name="depth_camera_optical_frame"/>
  <!-- Depth Camera sensor in Gazebo -->
  <gazebo reference="depth_camera_link">
    <material>Gazebo/Blue</material>
    <sensor name="depth_camera" type="depth">
      <camera>
        <horizontal_fov>1.047198</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>8.0</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>20</update_rate>
      <visualize>true</visualize>
      <plugin filename="libgazebo_ros_camera.so" name="depth_camera_controller">
        <ros>
          <namespace>/</namespace>
          <remapping>image_raw:=depth_camera/image_raw</remapping>
          <remapping>camera_info:=depth_camera/camera_info</remapping>
          <remapping>points:=depth_camera/points</remapping>
        </ros>
        <camera_name>depth_camera</camera_name>
        <frame_name>depth_camera_optical_frame</frame_name>
        <hack_baseline>0.07</hack_baseline>
        <output_type>sensor_msgs/PointCloud2</output_type>
        <distortion_k1>0.0</distortion_k1>
        <distortion_k2>0.0</distortion_k2>
        <distortion_k3>0.0</distortion_k3>
        <distortion_t1>0.0</distortion_t1>
        <distortion_t2>0.0</distortion_t2>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin rpy="0 0 0" xyz="0 0 0.015"/>
  </joint>
  <link name="imu_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.02 0.02 0.01"/>
      </geometry>
      <material name="red"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.02 0.02 0.01"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.000001" ixy="0" ixz="0" iyy="0.000001" iyz="0" izz="0.000001"/>
    </inertial>
  </link>
  <!-- IMU sensor in Gazebo -->
  <gazebo reference="imu_link">
    <material>Gazebo/Red</material>
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <topic>imu</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <ros>
          <namespace>/</namespace>
          <remapping>~/out:=imu/data</remapping>
        </ros>
        <topicName>imu/data</topicName>
        <bodyName>imu_link</bodyName>
        <frameName>imu_link</frameName>
        <initialOrientationAsReference>false</initialOrientationAsReference>
        <accelDrift>0.005 0.005 0.005</accelDrift>
        <accelGaussianNoise>0.005 0.005 0.005</accelGaussianNoise>
        <rateDrift>0.005 0.005 0.005</rateDrift>
        <rateGaussianNoise>0.005 0.005 0.005</rateGaussianNoise>
        <headingDrift>0.005</headingDrift>
        <headingGaussianNoise>0.005</headingGaussianNoise>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="gps_joint" type="fixed">
    <parent link="base_link"/>
    <child link="gps_link"/>
    <origin rpy="0 0 0" xyz="0 0 0.085"/>
  </joint>
  <link name="gps_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.01" radius="0.01"/>
      </geometry>
      <material name="white"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.01" radius="0.01"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.000001" ixy="0" ixz="0" iyy="0.000001" iyz="0" izz="0.000001"/>
    </inertial>
  </link>
  <!-- GPS sensor in Gazebo -->
  <gazebo reference="gps_link">
    <material>Gazebo/White</material>
    <sensor name="gps" type="gps">
      <always_on>true</always_on>
      <update_rate>10.0</update_rate>
      <visualize>true</visualize>
      <topic>gps/fix</topic>
      <plugin filename="libgazebo_ros_gps_sensor.so" name="gps_controller">
        <ros>
          <namespace>/</namespace>
          <remapping>~/out:=gps/fix</remapping>
        </ros>
        <frame_name>gps_link</frame_name>
        <!-- Reference position for GPS -->
        <reference_latitude>49.9</reference_latitude>
        <reference_longitude>8.9</reference_longitude>
        <reference_altitude>0.0</reference_altitude>
        <reference_heading>0.0</reference_heading>
        <!-- GPS Position Noise -->
        <position_noise>
          <x>0.05</x>
          <y>0.05</y>
          <z>0.05</z>
        </position_noise>
        <!-- GPS Velocity Noise -->
        <velocity_noise>
          <x>0.01</x>
          <y>0.01</y>
          <z>0.01</z>
        </velocity_noise>
      </plugin>
    </sensor>
  </gazebo>
</robot>
