<?xml version="1.0"?>
<!-- ###################################### -->
<!-- URDF DESCRIPTION OF THE DIFFERENTIAL DRIVE ROBOT    	-->
<!-- Made by Aleksandar Haber		    				-->
<!-- June 2024           		 					    -->
<!-- Modified by Samuel Folorunsho Mar 2025 -->
<!-- ###################################### 			-->

<robot name="differential_drive_robot" xmlns:xacro="http://www.ros.org/wiki/xacro">

<!-- Body dimensions -->
<xacro:property name="body_link_x_dim" value="1"/>
<xacro:property name="body_link_y_dim" value="0.6"/>
<xacro:property name="body_link_z_dim" value="0.3"/>

<!-- Wheel dimensions and locations -->
<xacro:property name="wheel_link_radius" value="0.15"/>
<xacro:property name="wheel_link_length" value="0.1"/>
<xacro:property name="wheel_link_z_location" value="-0.1"/>

<!-- Caster sphere dimensions and locations -->
<xacro:property name="caster_link_radius" value="0.15"/>
<xacro:property name="caster_link_z_location" value="-0.1"/>

<!-- Material density -->
<xacro:property name="body_density" value="2710.0"/>
<xacro:property name="wheel_density" value="2710.0"/>
<xacro:property name="caster_density" value="2710.0"/>

<!-- Pi constant -->
<xacro:property name="pi_const" value="3.14159265"/>

<!-- Robot body mass, wheel mass, caster mass -->
<xacro:property name="body_mass" value="${body_density*body_link_x_dim*body_link_y_dim*body_link_z_dim}"/>
<xacro:property name="wheel_mass" value="${wheel_density*pi_const*wheel_link_radius*wheel_link_radius*wheel_link_length}"/>
<xacro:property name="caster_mass" value="${caster_density*(4.0/3.0)*pi_const*caster_link_radius*caster_link_radius*caster_link_radius}"/>

<!-- Moments of inertia of the wheel -->
<xacro:property name="Iz_wheel" value="${0.5*wheel_mass*wheel_link_radius*wheel_link_radius}" />
<xacro:property name="I_wheel" 
value="${(1.0/12.0)*wheel_mass*(3.0*wheel_link_radius*wheel_link_radius+wheel_link_length*wheel_link_length)}" />

<!-- Moments of inertia of the caster sphere -->
<xacro:property name="I_caster" value="${(2.0/5.0)*caster_mass*caster_link_radius*caster_link_radius}" />

<!-- This macro defines the complete inertial section of the wheel -->
<!-- It is used later in the code -->
<xacro:macro name="inertia_wheel">
	<inertial>
	<origin rpy="0 0 0" xyz="0 0 0"/>
	<mass value="${wheel_mass}"/>
	<inertia ixx="${I_wheel}" ixy="0.0" ixz="0.0" iyy="${I_wheel}" iyz="0" izz="${Iz_wheel}" />
	</inertial>
</xacro:macro>

<!-- This macro defines the complete inertial section of the caster -->
<!-- It is used later in the code -->
<xacro:macro name="inertia_caster">
	<inertial>
	<origin rpy="0 0 0" xyz="0 0 0"/>
	<mass value="${caster_mass}"/>
	<inertia ixx="${I_caster}" ixy="0.0" ixz="0.0" iyy="${I_caster}" iyz="0" izz="${I_caster}" />
	</inertial>
</xacro:macro>

<!-- COLOR -->
<material name="white">
        <color rgba="1 1 1 1" />
    </material>

    <material name="orange">
        <color rgba="1 0.3 0.1 1"/>
    </material>

    <material name="blue">
        <color rgba="0.2 0.2 1 1"/>
    </material>

    <material name="black">
        <color rgba="0 0 0 1"/>
    </material>

    <material name="red">
        <color rgba="1 0 0 1"/>
    </material>

    <material name="green">
        <color rgba="0 1 0 1"/>
    </material>

    <material name="gray">
        <color rgba="0.7 0.7 0.7 1"/>
    </material>

<!-- Over here we include the file that defines extra Gazebo options and motion control driver -->
<xacro:include filename="$(find mobile_dd_robot)/model/robot.gazebo" />

<!-- ########################################################### -->
<!-- FROM HERE WE DEFINE LINKS, JOINTS 				 -->
<!-- ########################################################### -->

<!-- We need to have this dummy link otherwise Gazebo will complain -->
<link name="base_link">
</link>
<joint name="base_joint" type="fixed">
	<parent link="base_link"/>
	<child link="body_link"/>
</joint>

<!-- ########################################################### -->
<!-- START: Body link of the robot -->
<!-- ########################################################### -->
<link name="body_link">
	<visual>
		<geometry>
			<box size="${body_link_x_dim} ${body_link_y_dim} ${body_link_z_dim}" />
		</geometry>
	<material name="green"/>
	<origin rpy="0 0 0" xyz="0 0 0"/>
	</visual>
		
	<collision>
		<geometry>
			<box size="${body_link_x_dim} ${body_link_y_dim} ${body_link_z_dim}" />
		</geometry>
		<origin rpy="0 0 0" xyz="0 0 0"/>
	</collision>

	<inertial>
		<origin rpy="0 0 0" xyz="0 0 0"/>
		<mass value="${body_mass}"/>
	<inertia 
	ixx="${(1/12)*body_mass*(body_link_y_dim*body_link_y_dim+body_link_z_dim*body_link_z_dim)}" ixy="0" 		ixz="0" iyy="${(1/12)*body_mass*(body_link_x_dim*body_link_x_dim+body_link_z_dim*body_link_z_dim)}" 		iyz="0" 
	izz="${(1/12)*body_mass*(body_link_y_dim*body_link_y_dim+body_link_x_dim*body_link_x_dim)}" />
	</inertial>
</link>	

<!-- ########################################################### -->
<!-- END: Body link of the robot -->
<!-- ########################################################### -->


<!-- ########################################################### -->
<!-- START: Back right wheel of the robot and the joint -->
<!-- ########################################################### -->

<joint name="right_wheel_joint" type="continuous" >
	<parent link="body_link"/>
	<child  link="right_wheel_link" />
	<origin xyz="${-2*wheel_link_radius} ${-body_link_y_dim/2-wheel_link_length/2} ${wheel_link_z_location}" rpy="0 0 0" />
	<axis xyz="0 1 0"/>
	<limit effort="1000" velocity="1000"/>
	<dynamics damping="1.0" friction="1.0"/>	
</joint>

<link name="right_wheel_link">
	<visual>
		<origin rpy="1.570795 0 0" xyz="0 0 0"/>
		<geometry>
			<cylinder length="${wheel_link_length}" radius="${wheel_link_radius}"/>
		</geometry>
	<material name="black"/>
	</visual>

	<collision>
		<origin rpy="1.570795 0 0" xyz="0 0 0"/>
		<geometry>
			<cylinder length="${wheel_link_length}" radius="${wheel_link_radius}"/>
		</geometry>
	</collision>
	
	<xacro:inertia_wheel />
</link>

<!-- ########################################################### -->
<!-- END: Back right wheel of the robot and the joint -->
<!-- ########################################################### -->


<!-- ########################################################### -->
<!-- START: Back left wheel of the robot and the joint -->
<!-- ########################################################### -->

<joint name="left_wheel_joint" type="continuous" >
	<parent link="body_link"/>
	<child  link="left_wheel_link" />
	<origin xyz="${-2*wheel_link_radius} ${body_link_y_dim/2+wheel_link_length/2} ${wheel_link_z_location}" rpy="0 0 0" />
	<axis xyz="0 1 0"/>
	<limit effort="1000" velocity="1000"/>
	<dynamics damping="1.0" friction="1.0"/>	
</joint>

<link name="left_wheel_link">
	<visual>
		<origin rpy="1.570795 0 0" xyz="0 0 0"/>
		<geometry>
			<cylinder length="${wheel_link_length}" radius="${wheel_link_radius}"/>
		</geometry>
	<material name="black"/>
	</visual>

	<collision>
		<origin rpy="1.570795 0 0" xyz="0 0 0"/>
		<geometry>
			<cylinder length="${wheel_link_length}" radius="${wheel_link_radius}"/>
		</geometry>
	</collision>
	<xacro:inertia_wheel />
</link>

<!-- ########################################################### -->
<!-- END: Back left wheel of the robot and the joint -->
<!-- ########################################################### -->




<!-- ########################################################### -->
<!-- START: Caster wheel										 -->
<!-- ########################################################### -->

<joint name="caster_joint" type="fixed">
        <parent link="body_link"/>
        <child link="caster_link"/>
        <origin xyz="${2*caster_link_radius} 0 ${caster_link_z_location}" rpy="0 0 0"/>
</joint>
    

<link name="caster_link">
	<visual>
		<origin rpy="0 0 0" xyz="0 0 0"/>
		<geometry>
			<sphere radius="${caster_link_radius}" />
		</geometry>
	<material name="gray"/>
	</visual>

	<collision>
		<origin rpy="0 0 0" xyz="0 0 0"/>
		<geometry>
			<sphere radius="${caster_link_radius}" />
		</geometry>
	</collision>
	<xacro:inertia_caster />
</link>


<!-- ########################################################### -->
<!-- END: Caster wheel											 -->
<!-- ########################################################### -->

<!-- ########################################################### -->
<!-- START: LIDAR connector and sensor										 -->
<!-- ########################################################### -->

<!-- LIDAR connector link -->
<joint name="lidar_connector_joint" type="fixed">
    <parent link="body_link"/>
    <child link="lidar_connector_link"/>
    <origin xyz="0 0 ${body_link_z_dim/2}" rpy="0 0 0"/>
</joint>

<link name="lidar_connector_link">
    <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
            <cylinder radius="0.02" length="0.06"/>
        </geometry>
        <material name="black"/>
    </visual>
    <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
            <cylinder radius="0.02" length="0.06"/>
        </geometry>
    </collision>
    <inertial>
        <mass value="0.1"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="0.000033" ixy="0" ixz="0" iyy="0.000033" iyz="0" izz="0.000033"/>
    </inertial>
</link>

<!-- LIDAR sensor -->
<joint name="lidar_joint" type="fixed">
    <parent link="lidar_connector_link"/>
    <child link="lidar_link"/>
    <origin xyz="0 0 0.05" rpy="0 0 0"/>
</joint>

<link name="lidar_link">
    <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
            <cylinder radius="0.05" length="0.04"/>
        </geometry>
        <material name="black"/>
    </visual>
    <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
            <cylinder radius="0.05" length="0.04"/>
        </geometry>
    </collision>
    <inertial>
        <mass value="0.1"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="0.000033" ixy="0" ixz="0" iyy="0.000033" iyz="0" izz="0.000033"/>
    </inertial>
</link>

<!-- ########################################################### -->
<!-- END: LIDAR connector and sensor										 -->
<!-- ########################################################### -->

<!-- ########################################################### -->
<!-- START: Camera sensor										 -->
<!-- ########################################################### -->

<!-- Camera sensor -->
<joint name="camera_joint" type="fixed">
    <parent link="body_link"/>
    <child link="camera_link"/>
    <origin xyz="0.5 0.05 ${body_link_z_dim/2 + 0.01}" rpy="0 0.2 0"/>  <!-- Positioned forward and slightly tilted down -->
</joint>

<link name="camera_link">
    <visual>
        <origin xyz="0 0 0" rpy="0 ${pi_const/2} 0"/>
        <geometry>
            <box size="0.03 0.05 0.02"/>
        </geometry>
        <material name="orange"/>
    </visual>
    <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
            <box size="0.03 0.05 0.05"/>
        </geometry>
    </collision>
    <inertial>
        <mass value="0.1"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="0.000033" ixy="0" ixz="0" iyy="0.000033" iyz="0" izz="0.000033"/>
    </inertial>
</link>

<!-- Camera optical frame -->
<joint name="camera_optical_joint" type="fixed">
    <parent link="camera_link"/>
    <child link="camera_optical_frame"/>
    <origin xyz="0 0 0" rpy="${-pi_const/2} 0 ${-pi_const/2}"/>
</joint>

<link name="camera_optical_frame"/>

<!-- ########################################################### -->
<!-- END: Camera sensor										 -->
<!-- ########################################################### -->

<!-- ########################################################### -->
<!-- START: Depth Camera sensor									 -->
<!-- ########################################################### -->

<!-- Depth Camera mount directly on body -->
<joint name="depth_camera_joint" type="fixed">
    <parent link="body_link"/>
    <child link="depth_camera_link"/>
    <origin xyz="0.5 -0.05 ${body_link_z_dim/2 + 0.01}" rpy="0 0.2 0"/>  <!-- Positioned forward and slightly tilted down, opposite side from camera -->
</joint>

<link name="depth_camera_link">
    <visual>
        <origin xyz="0 0 0" rpy="0 ${pi_const/2} 0"/>
        <geometry>
            <box size="0.03 0.05 0.02"/>
        </geometry>
        <material name="blue"/>
    </visual>
    <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
            <box size="0.03 0.05 0.05"/>
        </geometry>
    </collision>
    <inertial>
        <mass value="0.1"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="0.000033" ixy="0" ixz="0" iyy="0.000033" iyz="0" izz="0.000033"/>
    </inertial>
</link>

<!-- Depth Camera optical frame -->
<joint name="depth_camera_optical_joint" type="fixed">
    <parent link="depth_camera_link"/>
    <child link="depth_camera_optical_frame"/>
    <origin xyz="0 0 0" rpy="${-pi_const/2} 0 ${-pi_const/2}"/>
</joint>

<link name="depth_camera_optical_frame"/>

<!-- ########################################################### -->
<!-- END: Depth Camera sensor									 -->
<!-- ########################################################### -->

<!-- ########################################################### -->
<!-- START: IMU sensor                                           -->
<!-- ########################################################### -->

<joint name="imu_joint" type="fixed">
    <parent link="body_link"/>
    <child link="imu_link"/>
    <origin xyz="0 0 ${body_link_z_dim/2 - 0.05}" rpy="0 0 0"/>
</joint>

<link name="imu_link">
    <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
            <box size="0.02 0.02 0.01"/>
        </geometry>
        <material name="red"/>
    </visual>
    <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
            <box size="0.02 0.02 0.01"/>
        </geometry>
    </collision>
    <inertial>
        <mass value="0.01"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="0.000001" ixy="0" ixz="0" iyy="0.000001" iyz="0" izz="0.000001"/>
    </inertial>
</link>

<!-- ########################################################### -->
<!-- END: IMU sensor                                             -->
<!-- ########################################################### -->

<!-- ########################################################### -->
<!-- START: GPS sensor                                           -->
<!-- ########################################################### -->

<joint name="gps_joint" type="fixed">
    <parent link="body_link"/>
    <child link="gps_link"/>
    <origin xyz="0 0 ${body_link_z_dim/2 + 0.02}" rpy="0 0 0"/>
</joint>

<link name="gps_link">
    <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
            <cylinder radius="0.01" length="0.01"/>
        </geometry>
        <material name="white"/>
    </visual>
    <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
            <cylinder radius="0.01" length="0.01"/>
        </geometry>
    </collision>
    <inertial>
        <mass value="0.01"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="0.000001" ixy="0" ixz="0" iyy="0.000001" iyz="0" izz="0.000001"/>
    </inertial>
</link>

<!-- ########################################################### -->
<!-- END: GPS sensor                                             -->
<!-- ########################################################### -->

</robot>
