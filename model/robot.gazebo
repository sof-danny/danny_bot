<?xml version="1.0"?>
<!-- ###################################### 						-->
<!-- GAZEBO ADDITIONAL DESCRIPTION OF THE DIFFERENTIAL DRIVE ROBOT	-->
<!-- Made by Aleksandar Haber		    							-->
<!-- June 2024              		    							-->
<!-- Modified by Sanuel Folorunsho Mar 2025 -->
<!-- ###################################### 						-->
<robot>
<!-- Everything is described here -->
<!-- http://classic.gazebosim.org/tutorials?tut=ros_urdf&cat=connect_ros  -->
<!-- mu1 and mu2 are friction coefficients -->
<gazebo reference="body_link">
<mu1>0.2</mu1>
<mu2>0.2</mu2>
<material>Gazebo/Green</material>
</gazebo>

<gazebo reference="right_wheel_link">
<mu1>0.2</mu1>
<mu2>0.2</mu2>
<material>Gazebo/Black</material>
</gazebo>


<gazebo reference="left_wheel_link">
<mu1>0.2</mu1>
<mu2>0.2</mu2>
<material>Gazebo/Black</material>
</gazebo>


<gazebo reference="caster_link">
<mu1>0.000002</mu1>
<mu2>0.000002</mu2>
<material>Gazebo/Gray</material>
</gazebo>


<gazebo reference="lidar_connector_link">
<mu1>0.000002</mu1>
<mu2>0.000002</mu2>
<material>Gazebo/Orange</material>
</gazebo>

<!-- LIDAR sensor in Gazebo -->
<gazebo reference="lidar_link">
  <material>Gazebo/Black</material>
  <sensor name="lidar" type="ray">
    <pose>0 0 0 0 0 0</pose>
    <visualize>true</visualize>
    <update_rate>10</update_rate>
    <ray>
      <scan>
        <horizontal>
          <samples>360</samples>
          <resolution>1</resolution>
          <min_angle>-3.14159</min_angle>
          <max_angle>3.14159</max_angle>
        </horizontal>
      </scan>
      <range>
        <min>0.1</min>
        <max>10.0</max>
        <resolution>0.01</resolution>
      </range>
      <noise>
        <type>gaussian</type>
        <mean>0.0</mean>
        <stddev>0.01</stddev>
      </noise>
    </ray>
    <plugin name="lidar_controller" filename="libgazebo_ros_ray_sensor.so">
      <ros>
        <namespace>/</namespace>
        <remapping>~/out:=scan</remapping>
      </ros>
      <output_type>sensor_msgs/LaserScan</output_type>
      <frame_name>lidar_link</frame_name>
    </plugin>
  </sensor>
</gazebo>

<!-- Camera sensor in Gazebo -->
<gazebo reference="camera_link">
  <material>Gazebo/Orange</material>
  <sensor name="camera" type="camera">
    <camera>
      <horizontal_fov>1.3962634</horizontal_fov>
      <image>
        <width>640</width>
        <height>480</height>
        <format>R8G8B8</format>
      </image>
      <clip>
        <near>0.02</near>
        <far>300</far>
      </clip>
      <noise>
        <type>gaussian</type>
        <mean>0.0</mean>
        <stddev>0.007</stddev>
      </noise>
    </camera>
    <always_on>1</always_on>
    <update_rate>30</update_rate>
    <visualize>true</visualize>
    <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
      <ros>
        <namespace>/</namespace>
        <remapping>image_raw:=camera/image_raw</remapping>
        <remapping>camera_info:=camera/camera_info</remapping>
      </ros>
      <output_type>sensor_msgs/Image</output_type>
      <frame_name>camera_optical_frame</frame_name>
      <camera_name>camera</camera_name>
      <update_rate>30.0</update_rate>
    </plugin>
  </sensor>
</gazebo>

<!-- Depth Camera sensor in Gazebo -->
<gazebo reference="depth_camera_link">
  <material>Gazebo/Blue</material>
  <sensor name="depth_camera" type="depth">
    <camera>
      <horizontal_fov>1.047198</horizontal_fov>
      <image>
        <width>640</width>
        <height>480</height>
        <format>R8G8B8</format>
      </image>
      <clip>
        <near>0.05</near>
        <far>8.0</far>
      </clip>
      <noise>
        <type>gaussian</type>
        <mean>0.0</mean>
        <stddev>0.007</stddev>
      </noise>
    </camera>
    <always_on>1</always_on>
    <update_rate>20</update_rate>
    <visualize>true</visualize>
    <plugin name="depth_camera_controller" filename="libgazebo_ros_camera.so">
      <ros>
        <namespace>/</namespace>
        <remapping>image_raw:=depth_camera/image_raw</remapping>
        <remapping>camera_info:=depth_camera/camera_info</remapping>
        <remapping>points:=depth_camera/points</remapping>
      </ros>
      <camera_name>depth_camera</camera_name>
      <frame_name>depth_camera_optical_frame</frame_name>
      <hack_baseline>0.07</hack_baseline>
      <output_type>sensor_msgs/PointCloud2</output_type>
      <distortion_k1>0.0</distortion_k1>
      <distortion_k2>0.0</distortion_k2>
      <distortion_k3>0.0</distortion_k3>
      <distortion_t1>0.0</distortion_t1>
      <distortion_t2>0.0</distortion_t2>
    </plugin>
  </sensor>
</gazebo>

<!-- IMU sensor in Gazebo -->
<gazebo reference="imu_link">
  <material>Gazebo/Red</material>
  <gravity>true</gravity>
  <sensor name="imu_sensor" type="imu">
    <always_on>true</always_on>
    <update_rate>100</update_rate>
    <visualize>true</visualize>
    <topic>imu</topic>
    <plugin name="imu_plugin" filename="libgazebo_ros_imu_sensor.so">
      <ros>
        <namespace>/</namespace>
        <remapping>~/out:=imu/data</remapping>
      </ros>
      <topicName>imu/data</topicName>
      <bodyName>imu_link</bodyName>
      <frameName>imu_link</frameName>
      <initialOrientationAsReference>false</initialOrientationAsReference>
      <accelDrift>0.005 0.005 0.005</accelDrift>
      <accelGaussianNoise>0.005 0.005 0.005</accelGaussianNoise>
      <rateDrift>0.005 0.005 0.005</rateDrift>
      <rateGaussianNoise>0.005 0.005 0.005</rateGaussianNoise>
      <headingDrift>0.005</headingDrift>
      <headingGaussianNoise>0.005</headingGaussianNoise>
    </plugin>
  </sensor>
</gazebo>

<!-- GPS sensor in Gazebo -->
<gazebo reference="gps_link">
  <material>Gazebo/White</material>
  <sensor name="gps" type="gps">
    <always_on>true</always_on>
    <update_rate>10.0</update_rate>
    <visualize>true</visualize>
    <topic>gps/fix</topic>
    <plugin name="gps_controller" filename="libgazebo_ros_gps_sensor.so">
      <ros>
        <namespace>/</namespace>
        <remapping>~/out:=gps/fix</remapping>
      </ros>
      <frame_name>gps_link</frame_name>
      <!-- Reference position for GPS -->
      <reference_latitude>49.9</reference_latitude>
      <reference_longitude>8.9</reference_longitude>
      <reference_altitude>0.0</reference_altitude>
      <reference_heading>0.0</reference_heading>
      <!-- GPS Position Noise -->
      <position_noise>
        <x>0.05</x>
        <y>0.05</y>
        <z>0.05</z>
      </position_noise>
      <!-- GPS Velocity Noise -->
      <velocity_noise>
        <x>0.01</x>
        <y>0.01</y>
        <z>0.01</z>
      </velocity_noise>
    </plugin>
  </sensor>
</gazebo>

<!-- Controller for the differential drive robot -->
<gazebo>
<plugin name='diff_drive' filename='libgazebo_ros_diff_drive.so'>

        <ros>
          <namespace> </namespace>
        </ros>

        <!-- Number of wheel pairs -->
        <num_wheel_pairs>1</num_wheel_pairs>
                  
        

        <!-- wheels0-->
        <left_joint>left_wheel_joint</left_joint>
        <right_joint>right_wheel_joint</right_joint>

        <!-- kinematics -->
        <wheel_separation>${body_link_y_dim+wheel_link_length}</wheel_separation>
   
        <wheel_diameter>${2*wheel_link_radius}</wheel_diameter>

        <!-- limits -->
        <max_wheel_torque>5000</max_wheel_torque>
        <max_wheel_acceleration>7.0</max_wheel_acceleration>

        <!-- output -->
        <publish_odom>true</publish_odom>
        <publish_odom_tf>true</publish_odom_tf>
        <publish_wheel_tf>true</publish_wheel_tf>

        <odometry_frame>odom</odometry_frame>
        <robot_base_frame>base_link</robot_base_frame>
    
      </plugin>
</gazebo> 
     
</robot>
